//
//          Use this file to set up your own RE extension patterns.
//
// An RE extension looks like this when used in a regular expression:
//
//   "client: (?E:ipv4)"
//
// That RE is exactly the same as:
//
//   "client: (\d{1,3}\.\d{1,3}\.\d{1,3}\.\d{1,3})"
//
// It will match things like:
//
//   "client: 74.125.136.113"
//
// New (or replacement) RE extensions can be defined as
//
//   name=pattern
//
// lines. Whitespace will be removed before and after the name, but all
// characters between the = and the end of the line are part of the pattern. If
// you have leading or trailing whitespace characters, they are part of the RE
// extension's pattern.
//
// Empty lines and lines whose first non-space content begins with #, ;, or //
// are ignored.
//

// Account names.
id=[-_0-9A-Za-z]+

// Python (Java, C, et al.) identifiers.
ident=[_A-Za-z][_0-9A-Za-z]+

// Comments may begin with #, ;, or // and continue to the end of the line.
// If you need to handle multi-line comments ... feel free to roll your own
// extension for that. (It CAN be done.)
comment=\s*(([#;]|//).*)?$

// Network
ipv4=\d{1,3}\.\d{1,3}\.\d{1,3}\.\d{1,3}
ipv6=[0-9A-Fa-f]{1,4}:[0-9A-Fa-f]{1,4}:[0-9A-Fa-f]{1,4}:[0-9A-Fa-f]{1,4}:[0-9A-Fa-f]{1,4}:[0-9A-Fa-f]{1,4}:[0-9A-Fa-f]{1,4}:[0-9A-Fa-f]{1,4}
ipaddr=(?E:ipv4)|(?E:ipv6)
cidr=(?E:ipv4)/\d{1,2}
macaddr48=[0-9A-Fa-f]{2}[-:][0-9A-Fa-f]{2}[-:][0-9A-Fa-f]{2}[-:][0-9A-Fa-f]{2}[-:][0-9A-Fa-f]{2}[-:][0-9A-Fa-f]{2}|[0-9A-Fa-f]{3}[-:][0-9A-Fa-f]{3}[-:][0-9A-Fa-f]{3}[-:][0-9A-Fa-f]{3}|['([0-9A-Fa-f]{4}\.['([0-9A-Fa-f]{4}\.['([0-9A-Fa-f]{4}
macaddr64=(([0-9A-Fa-f]{2})[-:.]([0-9A-Fa-f]{2})[-:.]([0-9A-Fa-f]{2})[-:.]([0-9A-Fa-f]{2})[-:.]([0-9A-Fa-f]{2})[-:.]([0-9A-Fa-f]{2})[-:.]([0-9A-Fa-f]{2})[-:.]([0-9A-Fa-f]{2}))|(([0-9A-Fa-f]{4})[-:.]([0-9A-Fa-f]{4})[-:.]([0-9A-Fa-f]{4})[-:.]([0-9A-Fa-f]{4}))
macaddr=(?E:macaddr48)|(?E:macaddr64)
hostname=[0-9A-Za-z]+(\.[-0-9A-Za-z]+)*
host=(?E:ipaddr)|(?E:hostname)

// Host and non-optional port.
service=(?E:host):\d+

// Host and optional port.
hostport=(?E:host)(:(\d{1,5}))?
filename=[^/]+
path=/?(?E:filename)(/(?E:filename))*
abspath=/(?E:filename)(/(?E:filename))*
email_localpart=(\(.*\))?([0-9A-Za-z!#$%&'*+-/=?^_`{|}~]+)(\.([0-9A-Za-z!#$%&'*+-/=?^_`{|}~])+)*(\(.*\))?@
email=(?E:email_localpart)(?E:hostport)
url_scheme=([A-Za-z]([-+.]?[0-9A-Za-z]+)*:){1,2}
url=(?E:url_scheme)((?E:email_localpart)|(//))(?E:hostport)?(?E:abspath)?(\?((.+?)=([^&]*))(&((.+?)=([^&]*)))*)?

// Time and Date Extensions
//   The day, day3, DAY, month, month3, and MONTH extensions are define
//   algorithmically in RE.py itself because it easy to do it that way and 
//   very messy to do it here. If you don't like the way they're defined
//   in the module, any redefinition you provide in this file will take
//   precedence.

date_YMD=(\d{2}(\d{2})?)([-/.])(\d{1,2})([-/.])(\d{1,2})
date_YmD=(\d{2}(\d{2})?)([-/.])((?E:month))([-/.])(\d{1,2})
date_mD=(?E:month)\s+(\d{1,2})
time_HM=(\d{1,2})([-:.])(\d{2})
time_HMS=(\d{1,2})([-:.])(\d{2})([-:.])(\d{2})
