#!/usr/bin/env python
'''
This program spells words in a phonetic alphabet. For instance, in the
NATO dialect, 'a' becomes 'Alpha', b becomes 'Bravo', and so on. The
phonetic spelling of each word is written to one line of standard
output.

Run this program the --help command line option to see command line
options. Supported dialects: NATO (the default), RAF, Police, US,
and Western Union.

'''

import optparse,os,sys

dialect=dict(
  nato=dict([(w[0].lower(),w) for w in 'Alpha Bravo Charlie Delta Echo Foxtrot Golf Hotel India Juliet Kilo Lima Mike November Oscar Papa Quebec Romeo Sierra Tango Uniform Victor Whiskey Xray Yankee Zulu'.split()]),
  raf=dict([(w[0].lower(),w) for w in 'Able/Affirm Baker Charlie Dog Easy Fox George How Item/Interrogatory Jig/Johny King Love Mike Nab/Negat Oboe Peter/Prep Queen Roger Sugar Tare Uncle Victor William X-ray Yoke Zebra'.split()]),
  police=dict([(w[0].lower(),w) for w in 'Adam Boy Charlie David Edward Frank George Henry Ida John King Lincoln Mary Nora Ocean Peter Queen Robert Sam Tom Union Victor William X-ray Young Zebra'.split()]),
  us=dict([(w[0].lower(),w) for w in 'Able Baker Charlie Dog Easy Fox George How Item Jig King Love Mike Nan Oboe Peter Queen Roger Sugar Tare Uncle Victor William X-ray Yoke Zebra'.split()]),
  wu=dict([(w[0].lower(),w) for w in 'Adams Boston Chicago Denver Easy Frank George Henry Ida John King Lincoln Mary NewYork Ocean Peter Queen Roger Sugar Thomas Union Victor William X-ray Young Zero'.split()])
)
dialects=' '.join(sorted(dialect.keys()))

prog=os.path.basename(sys.argv[0])
op=optparse.OptionParser(
  usage='''Usage: %prog [options] any text you'd like

This program spells words in a phonetic alphabet. For instance, in the
NATO dialect, 'a' becomes 'Alpha', b becomes 'Bravo', and so on. The
phonetic spelling of each word is written to one line of standard
output. Supported dialects: NATO (the default), RAF, Police, US, and
Western Union.''' 
)
op.add_option('-d','--dialect',choices=dialect.keys(),default='nato',help='Specify one of: %s'%dialects)
op.add_option('-i','--ignore-case',action='store_true',default=False,help='The format of the output ignores the case of the input. By default, F ==> FOXTROT while f ==> Foxtrot, for example.')
opt,args=op.parse_args()
if opt.dialect not in dialect:
  print >>sys.stderr,'%s: Unknown dialect %s'%(prog,opt.dialect)
  sys.exit(1)
d=dialect[opt.dialect]

# If there are no command line arguments ...
if not args:
  if os.isatty(sys.stdin.fileno()):
    op.print_usage() # Show usage message.
    sys.exit(0)
  else:
    args=sys.stdin   # Read "arguments" from standard input.

# Iterate through args (whatever type of sequence that is at this point),
# and spell each word found there on a line by itself.
for line in args:
  for word in line.split():
    for ch in word:
      w=d.get(ch.lower(),ch)
      if not opt.ignore_case and ch.isupper():
        w=w.upper()
      print w,
    print ''
